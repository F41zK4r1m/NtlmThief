name: Build NtlmThief (Windows)

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1) Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) Debug: show the workspace layout so we know exactly where the .sln landed
      - name: Dump directory tree
        run: |
          Write-Host "Current directory: $(pwd)"
          # Print a tree of files/folders
          Get-ChildItem -Recurse -Force | Format-List FullName

      # 3) Restore NuGet packages (if you have any)
      #    Adjust the path below to point at wherever your .sln actually is.
      #    If your sln is in the repo root, use "NtlmThief.sln"
      #    If itâ€™s nested in a folder called "NtlmThief", use "NtlmThief\NtlmThief.sln"
      - name: Restore NuGet packages
        run: nuget restore NtlmThief\NtlmThief.sln

      # 4) Set up MSBuild on the PATH
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      # 5) Build in Release|x64
      #    Again, adjust the .sln path if needed.
      - name: Build Solution (Release x64)
        run: msbuild.exe NtlmThief\NtlmThief.sln /p:Configuration=Release /p:Platform=x64

      # 6) Show everything in the output folder so we can see the .exe
      - name: List build output
        run: Get-ChildItem NtlmThief\x64\Release -Recurse -Force | Format-List FullName

      # 7) Upload the exe + DLLs + PDBs
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: NtlmThief-Release-x64
          path: |
            NtlmThief\x64\Release\NtlmThief.exe
            NtlmThief\x64\Release\**\*.dll
            NtlmThief\x64\Release\**\*.pdb
